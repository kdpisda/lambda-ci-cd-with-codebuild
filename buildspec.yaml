version: 0.2

env:
  variables:
    LambdaBucketName: "kd-freelancing"

phases:
  zip-lambda:
    commands:
      - |
        for dir in lambdas/*; do
          if [ -d "$dir" ]; then
            folder_name=$(basename "$dir")
            zip -r "$folder_name.zip" -j "$dir"/*
            aws s3 cp "$folder_name.zip" "s3://$LambdaBucketName/lambdas/$folder_name.zip"
            rm "$folder_name.zip"
            # Store version information in SSM Parameter
            version=$(aws s3api head-object --bucket $LambdaBucketName --key "lambdas/$folder_name.zip" --query 'VersionId' --output text)
            aws ssm put-parameter --name "LambdaVersion_$folder_name" --value "$version" --type String --overwrite
          fi
        done
  pre_build:
    commands:
      - echo Assuming role in target account...
      - aws sts assume-role --role-arn arn:aws:iam::106549696053:role/CDK-codebuild-pipeline-role --role-session-name codebuild-deployment > assume-role-output.json
      - export AWS_ACCESS_KEY_ID=$(jq -r '.Credentials.AccessKeyId' assume-role-output.json)
      - export AWS_SECRET_ACCESS_KEY=$(jq -r '.Credentials.SecretAccessKey' assume-role-output.json)
      - export AWS_SESSION_TOKEN=$(jq -r '.Credentials.SessionToken' assume-role-output.json)
  build:
    commands:
      - echo Deploying resources to target account...
      - aws cloudformation deploy --template-file templates/prod.yml --stack-name cross-lambda